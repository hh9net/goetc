// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Msg.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	No                   string   `protobuf:"bytes,2,opt,name=no,proto3" json:"no,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Resultvalue          string   `protobuf:"bytes,4,opt,name=resultvalue,proto3" json:"resultvalue,omitempty"`
	Resultdes            string   `protobuf:"bytes,5,opt,name=resultdes,proto3" json:"resultdes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_36c51302a842b04d, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Message) GetNo() string {
	if m != nil {
		return m.No
	}
	return ""
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Message) GetResultvalue() string {
	if m != nil {
		return m.Resultvalue
	}
	return ""
}

func (m *Message) GetResultdes() string {
	if m != nil {
		return m.Resultdes
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "pb.Message")
}

func init() { proto.RegisterFile("Msg.proto", fileDescriptor_36c51302a842b04d) }

var fileDescriptor_36c51302a842b04d = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xf4, 0x2d, 0x4e, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x6a, 0x64, 0xe4, 0x62, 0xf7, 0x4d,
	0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x15, 0x12, 0xe2, 0x62, 0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0xf8, 0xb8, 0x98, 0xf2, 0xf2, 0x25, 0x98, 0xc0, 0x22,
	0x4c, 0x79, 0xf9, 0x20, 0x35, 0x29, 0x89, 0x25, 0x89, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x3c, 0x41,
	0x60, 0xb6, 0x90, 0x02, 0x17, 0x77, 0x51, 0x6a, 0x71, 0x69, 0x4e, 0x49, 0x59, 0x62, 0x4e, 0x69,
	0xaa, 0x04, 0x0b, 0x58, 0x31, 0xb2, 0x90, 0x90, 0x0c, 0x17, 0x27, 0x84, 0x9b, 0x92, 0x5a, 0x2c,
	0xc1, 0x0a, 0x96, 0x47, 0x08, 0x18, 0x99, 0x71, 0xb1, 0xbb, 0x17, 0x15, 0x24, 0xfb, 0x16, 0xa7,
	0x0b, 0x69, 0x73, 0x71, 0x3a, 0xe7, 0xe7, 0xe6, 0x96, 0xe6, 0x65, 0x96, 0xa4, 0x0a, 0x71, 0xeb,
	0x15, 0x24, 0xe9, 0x41, 0x1d, 0x27, 0x85, 0xcc, 0x51, 0x62, 0xd0, 0x60, 0x34, 0x60, 0x4c, 0x62,
	0x03, 0x7b, 0xc3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x45, 0xc0, 0x91, 0x60, 0xd3, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GrpcMsgClient is the client API for GrpcMsg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcMsgClient interface {
	Communite(ctx context.Context, opts ...grpc.CallOption) (GrpcMsg_CommuniteClient, error)
}

type grpcMsgClient struct {
	cc *grpc.ClientConn
}

func NewGrpcMsgClient(cc *grpc.ClientConn) GrpcMsgClient {
	return &grpcMsgClient{cc}
}

func (c *grpcMsgClient) Communite(ctx context.Context, opts ...grpc.CallOption) (GrpcMsg_CommuniteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GrpcMsg_serviceDesc.Streams[0], "/pb.GrpcMsg/Communite", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcMsgCommuniteClient{stream}
	return x, nil
}

type GrpcMsg_CommuniteClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type grpcMsgCommuniteClient struct {
	grpc.ClientStream
}

func (x *grpcMsgCommuniteClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *grpcMsgCommuniteClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GrpcMsgServer is the server API for GrpcMsg service.
type GrpcMsgServer interface {
	Communite(GrpcMsg_CommuniteServer) error
}

func RegisterGrpcMsgServer(s *grpc.Server, srv GrpcMsgServer) {
	s.RegisterService(&_GrpcMsg_serviceDesc, srv)
}

func _GrpcMsg_Communite_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GrpcMsgServer).Communite(&grpcMsgCommuniteServer{stream})
}

type GrpcMsg_CommuniteServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type grpcMsgCommuniteServer struct {
	grpc.ServerStream
}

func (x *grpcMsgCommuniteServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *grpcMsgCommuniteServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GrpcMsg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GrpcMsg",
	HandlerType: (*GrpcMsgServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Communite",
			Handler:       _GrpcMsg_Communite_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "Msg.proto",
}
